version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: budget_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: budget-manager
    volumes:
      - ./api/data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - budget_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # API Service
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: budget_api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://mongodb:27017/budget-manager
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - budget_network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # UI Service (Development)
  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile.dev
    container_name: budget_ui
    restart: unless-stopped
    volumes:
      - ./ui:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=/api
    networks:
      - budget_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5173/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: budget_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - ui
    networks:
      - budget_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  budget_network:
    driver: bridge