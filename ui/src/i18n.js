import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';
import LanguageDetector from 'i18next-browser-languagedetector';

const resources = {
  en: {
    translation: {
      // Navigation
      dashboard: 'Dashboard',
      expenses: 'Expenses',
      incomes: 'Incomes',
      assets: 'Assets',
      categories: 'Categories',
      calendar: 'Calendar',
      recurringPayments: 'Recurring Payments',
      creditCards: 'Credit Cards',
      
      // Header & Common
      appTitle: 'Budget Manager',
      sidebarTitle: 'Budget',
      
      // Dashboard
      totalBalance: 'Total Balance',
      monthlyIncome: 'Monthly Income',
      monthlyExpenses: 'Monthly Expenses',
      netBalance: 'Net Balance',
      totalAssets: 'Total Assets',
      savingsRate: 'Savings Rate',
      recentTransactions: 'Recent Transactions',
      expenseCategories: 'Expense Categories',
      budgetOverview: 'Budget Overview',
      expenseDistribution: 'Expense Distribution',
      assetTargets: 'Asset Targets',
      
      // Pages
      expenseTransactions: 'Expense Transactions',
      incomeManagement: 'Income Management',
      assetManagement: 'Asset Management',
      categoryManagement: 'Category Management',
      
      // Forms
      addExpense: 'Add New Expense',
      editExpense: 'Edit Expense',
      addIncome: 'Add Income',
      editIncome: 'Edit Income',
      addAsset: 'Add Asset',
      editAsset: 'Edit Asset',
      addCategory: 'Add Category',
      editCategory: 'Edit Category',
      selectAssetType: 'Select Asset Type',
      source: 'Source',
      sourcePlaceholder: 'e.g., Salary, Freelance, etc.',
      descriptionPlaceholder: 'Optional description',
      isRecurring: 'Recurring Income',
      frequency: 'Frequency',
      weekly: 'Weekly',
      monthly: 'Monthly',
      yearly: 'Yearly',
      recurring: 'Recurring',
      oneTime: 'One-time',
      newExpense: 'New Expense',
      updateExpense: 'Update Expense',
      newAsset: 'New Asset',
      selectCategory: 'Select Category',
      amount: 'Amount',
      category: 'Category',
      date: 'Date',
      description: 'Description',
      name: 'Name',
      type: 'Type',
      value: 'Value',
      unit: 'Unit',
      targetAmount: 'Target Amount',
      currentAmount: 'Current Amount',
      assetType: 'Asset Type',
      currentValue: 'Current Value',
      targetValue: 'Target Value',
      status: 'Status',
      completed: 'Completed',
      pending: 'Pending',
      color: 'Color',
      predefinedColors: 'Predefined Colors',
      
      // Actions
      save: 'Save',
      update: 'Update',
      cancel: 'Cancel',
      add: 'Add',
      edit: 'Edit',
      delete: 'Delete',
      close: 'Close',
      
      // Categories
      food: 'Food',
      transport: 'Transport',
      entertainment: 'Entertainment',
      utilities: 'Utilities',
      healthcare: 'Healthcare',
      shopping: 'Shopping',
      education: 'Education',
      other: 'Other',
      
      // Asset Types
      savings: 'Savings',
      investment: 'Investment',
      realEstate: 'Real Estate',
      crypto: 'Cryptocurrency',
      
      // Table Headers
      actions: 'Actions',
      progress: 'Progress',
      
      // Messages
      noData: 'No data available',
      loading: 'Loading...',
      error: 'An error occurred',
      success: 'Operation completed successfully',
      confirmDelete: 'Are you sure you want to delete this expense?',
      confirmDeleteCategory: 'Are you sure you want to delete this category?',
      confirmDeleteAsset: 'Are you sure you want to delete this asset?',
      confirmDeleteIncome: 'Are you sure you want to delete this income?',
      categoryNameRequired: 'Category name is required',
      requiredFieldsError: 'Category, Amount and Date fields are required.',
      assetRequiredFieldsError: 'Name, Type and Target Amount fields are required.',
      incomeRequiredFieldsError: 'Source and Amount fields are required.',
      errorFetchingAssets: 'Error fetching assets',
      errorDeletingAsset: 'Error deleting asset',
      errorFetchingIncomes: 'Error fetching incomes',
      errorDeletingIncome: 'Error deleting income',
      
      // Credit Cards
      manageCreditCards: 'Manage your credit cards',
      installments: 'Installments',
      paymentCalendar: 'Payment Calendar',
      addCreditCard: 'Add Credit Card',
      totalCards: 'Total Cards',
      totalLimit: 'Total Limit',
      totalUsed: 'Total Used',
      utilizationRate: 'Utilization Rate',
      yourCreditCards: 'Your Credit Cards',
      noCreditCards: 'No credit cards found',
      addFirstCreditCard: 'Add your first credit card to get started',
      cardNumber: 'Card Number',
      available: 'Available',
      limit: 'Limit',
      utilization: 'Utilization',
      nextPayment: 'Next Payment',
      days: 'days',
      overdue: 'Overdue',
      details: 'Details',
      addInstallment: 'Add Installment',
      editCreditCard: 'Edit Credit Card',
      basicInformation: 'Basic Information',
      cardName: 'Card Name',
      bankName: 'Bank Name',
      enterCardName: 'Enter card name',
      enterBankName: 'Enter bank name',
      cardType: 'Card Type',
      cardNumberLast4: 'Card Number (Last 4 digits)',
      limitsAndBalance: 'Limits and Balance',
      availableLimit: 'Available Limit',
      currentBalance: 'Current Balance',
      paymentSchedule: 'Payment Schedule',
      statementDay: 'Statement Day',
      paymentDueDay: 'Payment Due Day',
      interestRates: 'Interest Rates',
      monthlyInterestRate: 'Monthly Interest Rate',
      annualInterestRate: 'Annual Interest Rate',
      confirmDeleteCard: 'Are you sure you want to delete this credit card?',
      errorDeletingCard: 'Error deleting credit card',
      errorLoadingData: 'Error loading data',
      retry: 'Retry',
      saving: 'Saving...',
      updateCard: 'Update Card',
      addCard: 'Add Card',
      cardNameRequired: 'Card name is required',
      bankNameRequired: 'Bank name is required',
      cardNumberRequired: 'Card number is required',
      cardNumberMustBe4Digits: 'Card number must be 4 digits',
      totalLimitMustBePositive: 'Total limit must be positive',
      availableLimitCannotExceedTotal: 'Available limit cannot exceed total limit',
      statementDayMustBeBetween1And31: 'Statement day must be between 1 and 31',
      paymentDueDayMustBeBetween1And31: 'Payment due day must be between 1 and 31',
      errorSavingCard: 'Error saving credit card',
      
      // Installments
      editInstallment: 'Edit Installment',
      purchaseInformation: 'Purchase Information',
      creditCard: 'Credit Card',
      selectCreditCard: 'Select Credit Card',
      purchaseDescription: 'Purchase Description',
      enterPurchaseDescription: 'Enter purchase description',
      merchant: 'Merchant',
      enterMerchant: 'Enter merchant',
      purchaseDate: 'Purchase Date',
      installmentDetails: 'Installment Details',
      originalAmount: 'Original Amount',
      totalInstallments: 'Total Installments',
      interestRate: 'Interest Rate',
      annual: 'Annual',
      installmentType: 'Installment Type',
      equalPayments: 'Equal Payments',
      balloonPayment: 'Balloon Payment',
      interestFirst: 'Interest First',
      principalFirst: 'Principal First',
      options: 'Options',
      allowEarlyPayment: 'Allow Early Payment',
      autoPayment: 'Auto Payment',
      notes: 'Notes',
      enterNotes: 'Enter notes',
      tags: 'Tags',
      addTag: 'Add tag',
      paymentPreview: 'Payment Preview',
      monthlyPayment: 'Monthly Payment',
      totalAmount: 'Total Amount',
      totalInterest: 'Total Interest',
      updateInstallment: 'Update Installment',
      creditCardRequired: 'Credit card is required',
      purchaseDescriptionRequired: 'Purchase description is required',
      categoryRequired: 'Category is required',
      originalAmountMustBePositive: 'Original amount must be positive',
      installmentsMustBeBetween1And36: 'Installments must be between 1 and 36',
      errorSavingInstallment: 'Error saving installment',
      seeAll: 'See All',
      upcomingPayments: 'Upcoming Payments',
      more: 'more',
      addCard: 'Add Card',
      manageCards: 'Manage Cards'
    }
  },
  tr: {
    translation: {
      // Navigation
      dashboard: 'Gösterge Paneli',
      expenses: 'Giderler',
      incomes: 'Gelirler',
      assets: 'Varlıklar',
      categories: 'Kategoriler',
      calendar: 'Takvim',
      recurringPayments: 'Tekrarlayan Ödemeler',
      creditCards: 'Kredi Kartları',
      
      // Header & Common
      appTitle: 'Bütçe Yöneticisi',
      sidebarTitle: 'Bütçe',
      
      // Dashboard
      totalBalance: 'Toplam Bakiye',
      monthlyIncome: 'Aylık Gelir',
      monthlyExpenses: 'Aylık Giderler',
      netBalance: 'Net Kalan',
      totalAssets: 'Toplam Varlık',
      savingsRate: 'Tasarruf Oranı',
      recentTransactions: 'Son İşlemler',
      expenseCategories: 'Gider Kategorileri',
      budgetOverview: 'Bütçe Özeti',
      expenseDistribution: 'Gider Dağılımı',
      assetTargets: 'Varlık Hedefleri',
      
      // Pages
      expenseTransactions: 'Gider İşlemleri',
      incomeManagement: 'Gelir Yönetimi',
      assetManagement: 'Varlık Yönetimi',
      categoryManagement: 'Kategori Yönetimi',
      
      // Forms
      addExpense: 'Yeni Gider Ekle',
      editExpense: 'Gider Düzenle',
      addIncome: 'Gelir Ekle',
      editIncome: 'Gelir Düzenle',
      addAsset: 'Varlık Ekle',
      editAsset: 'Varlık Düzenle',
      addCategory: 'Kategori Ekle',
      editCategory: 'Kategori Düzenle',
      selectAssetType: 'Varlık Türü Seçin',
      source: 'Kaynak',
      sourcePlaceholder: 'örn., Maaş, Serbest Çalışma, vb.',
      descriptionPlaceholder: 'İsteğe bağlı açıklama',
      isRecurring: 'Düzenli Gelir',
      frequency: 'Sıklık',
      weekly: 'Haftalık',
      monthly: 'Aylık',
      yearly: 'Yıllık',
      recurring: 'Düzenli',
      oneTime: 'Tek seferlik',
      newExpense: 'Yeni Gider',
      updateExpense: 'Gider Güncelle',
      newAsset: 'Yeni Varlık',
      selectCategory: 'Kategori Seçin',
      amount: 'Tutar',
      category: 'Kategori',
      date: 'Tarih',
      description: 'Açıklama',
      name: 'İsim',
      type: 'Tür',
      value: 'Değer',
      unit: 'Birim',
      targetAmount: 'Hedef Tutar',
      currentAmount: 'Mevcut Tutar',
      assetType: 'Varlık Türü',
      currentValue: 'Mevcut Değer',
      targetValue: 'Hedef Değer',
      status: 'Durum',
      completed: 'Gerçekleşti',
      pending: 'Beklenen',
      color: 'Renk',
      predefinedColors: 'Hazır Renkler',
      
      // Actions
      save: 'Kaydet',
      update: 'Güncelle',
      cancel: 'İptal',
      add: 'Ekle',
      edit: 'Düzenle',
      delete: 'Sil',
      close: 'Kapat',
      
      // Categories
      food: 'Yemek',
      transport: 'Ulaşım',
      entertainment: 'Eğlence',
      utilities: 'Faturalar',
      healthcare: 'Sağlık',
      shopping: 'Alışveriş',
      education: 'Eğitim',
      other: 'Diğer',
      
      // Asset Types
      savings: 'Tasarruf',
      investment: 'Yatırım',
      realEstate: 'Gayrimenkul',
      crypto: 'Kripto Para',
      
      // Table Headers
      actions: 'İşlemler',
      progress: 'İlerleme',
      
      // Messages
      noData: 'Veri bulunamadı',
      loading: 'Yükleniyor...',
      error: 'Bir hata oluştu',
      success: 'İşlem başarıyla tamamlandı',
      confirmDelete: 'Bu gideri silmek istediğinizden emin misiniz?',
      confirmDeleteCategory: 'Bu kategoriyi silmek istediğinizden emin misiniz?',
      confirmDeleteAsset: 'Bu varlığı silmek istediğinizden emin misiniz?',
      confirmDeleteIncome: 'Bu geliri silmek istediğinizden emin misiniz?',
      categoryNameRequired: 'Kategori adı zorunludur',
      requiredFieldsError: 'Kategori, Tutar ve Tarih alanları zorunludur.',
      assetRequiredFieldsError: 'İsim, Tür ve Hedef Tutar alanları zorunludur.',
      incomeRequiredFieldsError: 'Kaynak ve Tutar alanları zorunludur.',
      errorFetchingAssets: 'Varlıklar yüklenirken hata oluştu',
      errorDeletingAsset: 'Varlık silinirken hata oluştu',
      errorFetchingIncomes: 'Gelirler yüklenirken hata oluştu',
      errorDeletingIncome: 'Gelir silinirken hata oluştu',
      
      // Credit Cards
      manageCreditCards: 'Kredi kartlarınızı yönetin',
      installments: 'Taksitler',
      paymentCalendar: 'Ödeme Takvimi',
      addCreditCard: 'Kredi Kartı Ekle',
      totalCards: 'Toplam Kart',
      totalLimit: 'Toplam Limit',
      totalUsed: 'Kullanılan Tutar',
      utilizationRate: 'Kullanım Oranı',
      yourCreditCards: 'Kredi Kartlarınız',
      noCreditCards: 'Kredi kartı bulunamadı',
      addFirstCreditCard: 'Başlamak için ilk kredi kartınızı ekleyin',
      cardNumber: 'Kart Numarası',
      available: 'Kullanılabilir',
      limit: 'Limit',
      utilization: 'Kullanım',
      nextPayment: 'Sonraki Ödeme',
      days: 'gün',
      overdue: 'Gecikmiş',
      details: 'Detaylar',
      addInstallment: 'Taksit Ekle',
      editCreditCard: 'Kredi Kartı Düzenle',
      basicInformation: 'Temel Bilgiler',
      cardName: 'Kart Adı',
      bankName: 'Banka Adı',
      enterCardName: 'Kart adını girin',
      enterBankName: 'Banka adını girin',
      cardType: 'Kart Türü',
      cardNumberLast4: 'Kart Numarası (Son 4 rakam)',
      limitsAndBalance: 'Limitler ve Bakiye',
      availableLimit: 'Kullanılabilir Limit',
      currentBalance: 'Mevcut Bakiye',
      paymentSchedule: 'Ödeme Programı',
      statementDay: 'Ekstre Günü',
      paymentDueDay: 'Son Ödeme Günü',
      interestRates: 'Faiz Oranları',
      monthlyInterestRate: 'Aylık Faiz Oranı',
      annualInterestRate: 'Yıllık Faiz Oranı',
      confirmDeleteCard: 'Bu kredi kartını silmek istediğinizden emin misiniz?',
      errorDeletingCard: 'Kredi kartı silinirken hata oluştu',
      errorLoadingData: 'Veri yüklenirken hata oluştu',
      retry: 'Yeniden Dene',
      saving: 'Kaydediliyor...',
      updateCard: 'Kartı Güncelle',
      addCard: 'Kart Ekle',
      cardNameRequired: 'Kart adı zorunludur',
      bankNameRequired: 'Banka adı zorunludur',
      cardNumberRequired: 'Kart numarası zorunludur',
      cardNumberMustBe4Digits: 'Kart numarası 4 rakam olmalıdır',
      totalLimitMustBePositive: 'Toplam limit pozitif olmalıdır',
      availableLimitCannotExceedTotal: 'Kullanılabilir limit toplam limiti aşamaz',
      statementDayMustBeBetween1And31: 'Ekstre günü 1 ile 31 arasında olmalıdır',
      paymentDueDayMustBeBetween1And31: 'Son ödeme günü 1 ile 31 arasında olmalıdır',
      errorSavingCard: 'Kredi kartı kaydedilirken hata oluştu',
      
      // Installments
      editInstallment: 'Taksit Düzenle',
      purchaseInformation: 'Alışveriş Bilgileri',
      creditCard: 'Kredi Kartı',
      selectCreditCard: 'Kredi Kartı Seçin',
      purchaseDescription: 'Alışveriş Açıklaması',
      enterPurchaseDescription: 'Alışveriş açıklamasını girin',
      merchant: 'Satıcı',
      enterMerchant: 'Satıcı adını girin',
      purchaseDate: 'Alışveriş Tarihi',
      installmentDetails: 'Taksit Detayları',
      originalAmount: 'Orijinal Tutar',
      totalInstallments: 'Toplam Taksit',
      interestRate: 'Faiz Oranı',
      annual: 'Yıllık',
      installmentType: 'Taksit Türü',
      equalPayments: 'Eşit Ödemeler',
      balloonPayment: 'Balon Ödeme',
      interestFirst: 'Önce Faiz',
      principalFirst: 'Önce Anapara',
      options: 'Seçenekler',
      allowEarlyPayment: 'Erken Ödemeye İzin Ver',
      autoPayment: 'Otomatik Ödeme',
      notes: 'Notlar',
      enterNotes: 'Notları girin',
      tags: 'Etiketler',
      addTag: 'Etiket ekle',
      paymentPreview: 'Ödeme Önizlemesi',
      monthlyPayment: 'Aylık Ödeme',
      totalAmount: 'Toplam Tutar',
      totalInterest: 'Toplam Faiz',
      updateInstallment: 'Taksit Güncelle',
      creditCardRequired: 'Kredi kartı zorunludur',
      purchaseDescriptionRequired: 'Alışveriş açıklaması zorunludur',
      categoryRequired: 'Kategori zorunludur',
      originalAmountMustBePositive: 'Orijinal tutar pozitif olmalıdır',
      installmentsMustBeBetween1And36: 'Taksit sayısı 1 ile 36 arasında olmalıdır',
      errorSavingInstallment: 'Taksit kaydedilirken hata oluştu',
      seeAll: 'Tümünü Gör',
      upcomingPayments: 'Yaklaşan Ödemeler',
      more: 'tane daha',
      addCard: 'Kart Ekle',
      manageCards: 'Kartları Yönet'
    }
  }
};

i18n
  .use(LanguageDetector)
  .use(initReactI18next)
  .init({
    resources,
    lng: 'en', // Varsayılan dil İngilizce
    fallbackLng: 'en',
    debug: true,
    
    detection: {
      order: ['localStorage', 'htmlTag'],
      lookupLocalStorage: 'i18nextLng',
      caches: ['localStorage']
    },
    
    interpolation: {
      escapeValue: false,
    }
  });

export default i18n;